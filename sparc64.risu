###############################################################################
# Copyright (c) 2024 Linaro Limited
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
###############################################################################

# Input file for risugen defining Sparc64 instructions
.mode sparc64

ADD_r           SPARC 10 rd:5 0 cc:1 ci:1 000 rs1:5 0 00000000 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
ADD_i           SPARC 10 rd:5 0 cc:1 ci:1 000 rs1:5 1 imm:13 \
    !constraints { reg_ok($rd) && reg_ok($rs1); }

AND_r           SPARC 10 rd:5 0 cc:1 0001 rs1:5 0 00000000 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
AND_i           SPARC 10 rd:5 0 cc:1 0001 rs1:5 1 imm:13 \
    !constraints { reg_ok($rd) && reg_ok($rs1); }

OR_r           SPARC 10 rd:5 0 cc:1 0010 rs1:5 0 00000000 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
OR_i           SPARC 10 rd:5 0 cc:1 0010 rs1:5 1 imm:13 \
    !constraints { reg_ok($rd) && reg_ok($rs1); }

XOR_r           SPARC 10 rd:5 0 cc:1 0011 rs1:5 0 00000000 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
XOR_i           SPARC 10 rd:5 0 cc:1 0011 rs1:5 1 imm:13 \
    !constraints { reg_ok($rd) && reg_ok($rs1); }

#
# VIS1
#

EDGE8cc         VIS1 10 rd:5 110110 rs1:5 0 0000 0000 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
EDGE8Lcc        VIS1 10 rd:5 110110 rs1:5 0 0000 0010 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
EDGE16cc        VIS1 10 rd:5 110110 rs1:5 0 0000 0100 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
EDGE16Lcc       VIS1 10 rd:5 110110 rs1:5 0 0000 0110 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
EDGE32cc        VIS1 10 rd:5 110110 rs1:5 0 0000 1000 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
EDGE32Lcc       VIS1 10 rd:5 110110 rs1:5 0 0000 1010 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }

ARRAY8          VIS1 10 rd:5 110110 rs1:5 0 0001 0000 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
ARRAY16         VIS1 10 rd:5 110110 rs1:5 0 0001 0010 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
ARRAY32         VIS1 10 rd:5 110110 rs1:5 0 0001 0100 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }

FZEROd          VIS1 10 rd:5 110110 00000 0 0110 0000 00000
FZEROs          VIS1 10 rd:5 110110 00000 0 0110 0001 00000
FONEd           VIS1 10 rd:5 110110 00000 0 0110 1110 00000
FONEs           VIS1 10 rd:5 110110 00000 0 0110 1111 00000

FSRC1d          VIS1 10 rd:5 110110 rs1:5 0 0111 0100 00000
FSRC1s          VIS1 10 rd:5 110110 rs1:5 0 0111 0101 00000
FSRC2d          VIS1 10 rd:5 110110 00000 0 0111 1000 rs2:5
FSRC2s          VIS1 10 rd:5 110110 00000 0 0111 1001 rs2:5
FNOT1d          VIS1 10 rd:5 110110 rs1:5 0 0110 1010 00000
FNOT1s          VIS1 10 rd:5 110110 rs1:5 0 0110 1011 00000
FNOT2d          VIS1 10 rd:5 110110 00000 0 0110 0110 rs2:5
FNOT2s          VIS1 10 rd:5 110110 00000 0 0110 0111 rs2:5

FPADD16         VIS1 10 rd:5 110110 rs1:5 0 0101 0000 rs2:5
FPADD16s        VIS1 10 rd:5 110110 rs1:5 0 0101 0001 rs2:5
FPADD32         VIS1 10 rd:5 110110 rs1:5 0 0101 0010 rs2:5
FPADD32s        VIS1 10 rd:5 110110 rs1:5 0 0101 0011 rs2:5
FPSUB16         VIS1 10 rd:5 110110 rs1:5 0 0101 0100 rs2:5
FPSUB16s        VIS1 10 rd:5 110110 rs1:5 0 0101 0101 rs2:5
FPSUB32         VIS1 10 rd:5 110110 rs1:5 0 0101 0110 rs2:5
FPSUB32s        VIS1 10 rd:5 110110 rs1:5 0 0101 0111 rs2:5

FNORd           VIS1 10 rd:5 110110 rs1:5 0 0110 0010 rs2:5
FNORs           VIS1 10 rd:5 110110 rs1:5 0 0110 0011 rs2:5
FANDNOT1d       VIS1 10 rd:5 110110 rs1:5 0 0110 0100 rs2:5
FANDNOT1s       VIS1 10 rd:5 110110 rs1:5 0 0110 0101 rs2:5
FANDNOT2d       VIS1 10 rd:5 110110 rs1:5 0 0110 1000 rs2:5
FANDNOT2s       VIS1 10 rd:5 110110 rs1:5 0 0110 1001 rs2:5
FXORd           VIS1 10 rd:5 110110 rs1:5 0 0110 1100 rs2:5
FXORs           VIS1 10 rd:5 110110 rs1:5 0 0110 1101 rs2:5
FNANDd          VIS1 10 rd:5 110110 rs1:5 0 0110 1110 rs2:5
FNANDs          VIS1 10 rd:5 110110 rs1:5 0 0110 1111 rs2:5
FANDd           VIS1 10 rd:5 110110 rs1:5 0 0111 0000 rs2:5
FANDs           VIS1 10 rd:5 110110 rs1:5 0 0111 0001 rs2:5
FXNORd          VIS1 10 rd:5 110110 rs1:5 0 0111 0010 rs2:5
FXNORs          VIS1 10 rd:5 110110 rs1:5 0 0111 0011 rs2:5
FORNOT1d        VIS1 10 rd:5 110110 rs1:5 0 0111 0110 rs2:5
FORNOT1s        VIS1 10 rd:5 110110 rs1:5 0 0111 0111 rs2:5
FORNOT2d        VIS1 10 rd:5 110110 rs1:5 0 0111 1010 rs2:5
FORNOT2s        VIS1 10 rd:5 110110 rs1:5 0 0111 1011 rs2:5
FORd            VIS1 10 rd:5 110110 rs1:5 0 0111 1100 rs2:5
FORs            VIS1 10 rd:5 110110 rs1:5 0 0111 1101 rs2:5

FMUL8x16        VIS1 10 rd:5 110110 rs1:5 0 0011 0001 rs2:5
FMUL8x16AU      VIS1 10 rd:5 110110 rs1:5 0 0011 0011 rs2:5
FMUL8x16AL      VIS1 10 rd:5 110110 rs1:5 0 0011 0101 rs2:5
FMUL8SUx16      VIS1 10 rd:5 110110 rs1:5 0 0011 0110 rs2:5
FMUL8ULx16      VIS1 10 rd:5 110110 rs1:5 0 0011 0111 rs2:5
FMULD8SUx16     VIS1 10 rd:5 110110 rs1:5 0 0011 1000 rs2:5
FMULD8ULx16     VIS1 10 rd:5 110110 rs1:5 0 0011 1001 rs2:5

FPACK32         VIS1 10 rd:5 110110 rs1:5 0 0011 1010 rs2:5
FPACK16         VIS1 10 rd:5 110110 00000 0 0011 1011 rs2:5
FPACKFIX        VIS1 10 rd:5 110110 00000 0 0011 1101 rs2:5
PDIST           VIS1 10 rd:5 110110 rs1:5 0 0011 1110 rs2:5

FPMERGE         VIS1 10 rd:5 110110 rs1:5 0 0100 1011 rs2:5
FEXPAND         VIS1 10 rd:5 110110 00000 0 0100 1101 rs2:5

# %gsr not handled by risu
# ALIGNADDR     VIS1 10 rd:5 110110 rs1:5 0 0001 1000 rs2:5 \
#     !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
# ALIGNADDRL    VIS1 10 rd:5 110110 rs1:5 0 0001 1010 rs2:5 \
#     !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
# FALIGNDATAg   VIS1 10 rd:5 110110 rs1:5 0 0100 1000 rs2:5

#
# VIS2
#

EDGE8N          VIS2 10 rd:5 110110 rs1:5 0 0000 0001 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
EDGE8LN         VIS2 10 rd:5 110110 rs1:5 0 0000 0011 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
EDGE16N         VIS2 10 rd:5 110110 rs1:5 0 0000 0101 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
EDGE16LN        VIS2 10 rd:5 110110 rs1:5 0 0000 0111 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
EDGE32N         VIS2 10 rd:5 110110 rs1:5 0 0000 1001 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
EDGE32LN        VIS2 10 rd:5 110110 rs1:5 0 0000 1011 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }

# %gsr not handled by risu
# BMASK         VIS2 10 rd:5 110110 rs1:5 0 0001 1001 rs2:5 \
#     !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
# BSHUFFLE      VIS2 10 rd:5 110110 rs1:5 0 0100 1100 rs2:5
# SIAM          VIS2 10 00000 110110 00000 010000001 00 mode:3

#
# FMAF
#

FMADDs          FMAF 10 rd:5 110111 rs1:5 rs3:5 0001 rs2:5
FMADDd          FMAF 10 rd:5 110111 rs1:5 rs3:5 0010 rs2:5
FMSUBs          FMAF 10 rd:5 110111 rs1:5 rs3:5 0101 rs2:5
FMSUBd          FMAF 10 rd:5 110111 rs1:5 rs3:5 0110 rs2:5
FNMSUBs         FMAF 10 rd:5 110111 rs1:5 rs3:5 1001 rs2:5
FNMSUBd         FMAF 10 rd:5 110111 rs1:5 rs3:5 1010 rs2:5
FNMADDs         FMAF 10 rd:5 110111 rs1:5 rs3:5 1101 rs2:5
FNMADDd         FMAF 10 rd:5 110111 rs1:5 rs3:5 1110 rs2:5

#
# VIS3
#

ADDXC           VIS3 10 rd:5 110110 rs1:5 0 0001 00 cc 1 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }

FCHKSM16        VIS3 10 rd:5 110110 rs1:5 0 0100 0100 rs2:5
FMEAN16         VIS3 10 rd:5 110110 rs1:5 0 0100 0000 rs2:5

FHADDs          VIS3 10 rd:5 110100 rs1:5 0 0110 0001 rs2:5
FHADDd          VIS3 10 rd:5 110100 rs1:5 0 0110 0010 rs2:5
FHSUBs          VIS3 10 rd:5 110100 rs1:5 0 0110 0101 rs2:5
FHSUBd          VIS3 10 rd:5 110100 rs1:5 0 0110 0110 rs2:5
FNHADDs         VIS3 10 rd:5 110100 rs1:5 0 0111 0001 rs2:5
FNHADDd         VIS3 10 rd:5 110100 rs1:5 0 0111 0010 rs2:5

FNADDs          VIS3 10 rd:5 110100 rs1:5 0 0101 0001 rs2:5
FNADDd          VIS3 10 rd:5 110100 rs1:5 0 0101 0010 rs2:5
FNMULs          VIS3 10 rd:5 110100 rs1:5 0 0101 1001 rs2:5
FNMULd          VIS3 10 rd:5 110100 rs1:5 0 0101 1010 rs2:5

FPADD64         VIS3 10 rd:5 110110 rs1:5 0 0100 0010 rs2:5
FPSUB64         VIS3 10 rd:5 110110 rs1:5 0 0100 0110 rs2:5

FPADDS16        VIS3 10 rd:5 110110 rs1:5 0 0101 1000 rs2:5
FPADDS16s       VIS3 10 rd:5 110110 rs1:5 0 0101 1001 rs2:5
FPADDS32        VIS3 10 rd:5 110110 rs1:5 0 0101 1010 rs2:5
FPADDS32s       VIS3 10 rd:5 110110 rs1:5 0 0101 1011 rs2:5
FPSUBS16        VIS3 10 rd:5 110110 rs1:5 0 0101 1100 rs2:5
FPSUBS16s       VIS3 10 rd:5 110110 rs1:5 0 0101 1101 rs2:5
FPSUBS32        VIS3 10 rd:5 110110 rs1:5 0 0101 1110 rs2:5
FPSUBS32s       VIS3 10 rd:5 110110 rs1:5 0 0101 1111 rs2:5

FPCMPULE8       VIS3 10 rd:5 110110 rs1:5 1 0010 0000 rs2:5 \
    !constraints { reg_ok($rd) }
FPCMPUGT8       VIS3 10 rd:5 110110 rs1:5 1 0010 1000 rs2:5 \
    !constraints { reg_ok($rd) }
FPCMPEQ8        VIS3 10 rd:5 110110 rs1:5 1 0010 0010 rs2:5 \
    !constraints { reg_ok($rd) }
FPCMPNE8        VIS3 10 rd:5 110110 rs1:5 1 0010 1010 rs2:5 \
    !constraints { reg_ok($rd) }

FSLL16          VIS3 10 rd:5 110110 rs1:5 0 0010 0001 rs2:5
FSRL16          VIS3 10 rd:5 110110 rs1:5 0 0010 0011 rs2:5
FSLAS16         VIS3 10 rd:5 110110 rs1:5 0 0010 1001 rs2:5
FSRA16          VIS3 10 rd:5 110110 rs1:5 0 0010 1011 rs2:5
FSLL32          VIS3 10 rd:5 110110 rs1:5 0 0010 0101 rs2:5
FSRL32          VIS3 10 rd:5 110110 rs1:5 0 0010 0111 rs2:5
FSLAS32         VIS3 10 rd:5 110110 rs1:5 0 0010 1101 rs2:5
FSRA32          VIS3 10 rd:5 110110 rs1:5 0 0010 1111 rs2:5

LZCNT           VIS3 10 rd:5 110110 00000 0 0001 0111 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs2); }

PDISTN          VIS3 10 rd:5 110110 rs1:5 0 0011 1111 rs2:5 \
    !constraints { reg_ok($rd) }

UMULXHI         VIS3 10 rd:5 110110 rs1:5 0 0001 0110 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
XMULX           VIS3 10 rd:5 110110 rs1:5 1 0001 0101 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }
XMULXHI         VIS3 10 rd:5 110110 rs1:5 1 0001 0110 rs2:5 \
    !constraints { reg_ok($rd) && reg_ok($rs1) && reg_ok($rs2); }

MOVsTOuw        VIS3 10 rd:5 110110 00000 1 0001 0001 rs2:5 \
    !constraints { reg_ok($rd) }
MOVsTOsw        VIS3 10 rd:5 110110 00000 1 0001 0011 rs2:5 \
    !constraints { reg_ok($rd) }
MOVwTOs         VIS3 10 rd:5 110110 00000 1 0001 1001 rs2:5 \
    !constraints { reg_ok($rs2) }
MOVdTOx         VIS3 10 rd:5 110110 00000 1 0001 0000 rs2:5 \
    !constraints { reg_ok($rd) }
MOVxTOd         VIS3 10 rd:5 110110 00000 1 0001 1000 rs2:5 \
    !constraints { reg_ok($rs2) }

# Defer
# LDXEFSR_r     VIS3 11 00011 100001 rs1:5 0 00000000 rs2:5
# LDXEFSR_i     VIS3 11 00011 100001 rs1:5 1 simm:13

# %gsr not handled by risu
# CMASK8          VIS3 10 00000 110110 00000 0 0001 1011 rs2:5 \
#     !constraints { reg_ok($rs2); }
# CMASK16         VIS3 10 00000 110110 00000 0 0001 1101 rs2:5 \
#     !constraints { reg_ok($rs2); }
# CMASK32         VIS3 10 00000 110110 00000 0 0001 1111 rs2:5 \
#     !constraints { reg_ok($rs2); }
